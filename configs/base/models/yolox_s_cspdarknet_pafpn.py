INF=1000000
model=dict(
    type='YOLOX',
    backbone=dict(type='CSPDarknet',
                 arch='P5',
                 deepen_factor=0.33,
                 widen_factor=0.5,
                 returned_layers=(3,4,5),
                 frozen_stages=-1,
                 spp_kernel_sizes=(5,9,13),
                 conv_cfg=None,
                 norm_cfg=dict(type='BN', momentum=0.03, eps=0.001),
                 act_cfg=dict(type='swish'),
                 norm_eval=False,
                 init_cfg=dict(
                     type='kaiming',
                     layer='Conv2d',
                     a=2.23606797749979,
                     distribution='uniform',
                     mode='fan_in',
                     nonlinearity='leaky_relu'),
                 ),
    neck = dict(type='YOLOXPAFPN',
                in_channels=(128,256,512),
                out_channels=128,
                num_csp_blocks=1,
                upsample_cfg=dict(scale_factor=2, mode='nearest'),
                conv_cfg=None,
                norm_cfg=dict(type='BN', momentum=0.03, eps=0.001),
                act_cfg=dict(type='swish'),
                init_cfg=dict(
                    type='kaiming',
                    layer='Conv2d',
                    a=2.23606797749979,
                    distribution='uniform',
                    mode='fan_in',
                    nonlinearity='leaky_relu'),),
    det_head= dict(type='YOLOXHead',
                   num_classes=80,
                   head_cfg=dict(type='YOLOXFeatureHead',
                               in_channels=128,
                               out_channels=128,
                               stacked_convs=2,
                               strides=[8, 16, 32],
                               num_classes=80,),
                   strides = [8, 16, 32],
                   prior_generator=dict(type='MultiLevelGridPointGenerator',
                           offset=0,),
                   box_matcher=dict(type='SimOTABoxMatcher',
                           center_radius=2.5,
                           candidate_topk=10,
                           iou_weight=3.,
                           class_weight=1.),
                   class_loss=dict(
                       type='BCEWithLogitsLoss',
                       reduction='sum',
                       ),
                   box_loss=dict(
                       type='IoULoss',
                       mode='square',
                       eps=1e-16,
                       reduction='sum',
                       loss_weight=5.0),
                   obj_loss=dict(
                       type='BCEWithLogitsLoss',
                       reduction='sum',
                       ),
                   l1_loss=dict(type='L1Loss', reduction='sum',),
                   test_cfg=dict(score_thresh=0.01,
                       nms_thresh=0.65,),
                   init_cfg=None,),
)